plugins {
  id 'org.springframework.boot' version '2.4.3'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id "com.github.node-gradle.node" version "2.2.4"
  id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  runtimeOnly 'org.postgresql:postgresql'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
}

test {
  useJUnitPlatform()
}

node {
  download = true
  version = "14.15.1"
  workDir = file("${project.buildDir}/nodejs")
  npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
  inputs.file('src/main/webapp/package.json')
  inputs.file('src/main/webapp/package-lock.json')
  outputs.dir('src/main/webapp/node_modules')
  description = "Installs all dependencies from package.json"
  workingDir = file("${project.projectDir}/src/main/webapp")
  args = ["ci"]
}

task appNpmBuild(type: NpmTask) {
  inputs.files(fileTree('src/main/webapp/node_modules'))
  inputs.files(fileTree('src/main/webapp/src'))
  inputs.files(fileTree('src/main/webapp/public'))
  inputs.file('src/main/webapp/package.json')
  outputs.dir('build/resources/main/static')
  description = "Builds production of the webapp"
  workingDir = file("${project.projectDir}/src/main/webapp")
  args = ["run", "build"]
}

task copyWebApp(type: Copy) {
  inputs.files(fileTree('src/main/webapp/build'))
  outputs.dir("${project.buildDir}/resources/main/static/.")
  from 'src/main/webapp/build'
  into "${project.buildDir}/resources/main/static/."
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp